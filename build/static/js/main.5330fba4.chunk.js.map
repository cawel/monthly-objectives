{"version":3,"sources":["components/Objective.js","components/ObjectiveList.js","components/MonthSelector.js","components/ObjectiveAdd.js","base.js","components/Logout.js","helpers.js","components/Footer.js","components/Login.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["Objective","toggleObjectiveCheck","event","props","index","className","type","checked","this","item","onChange","name","React","Component","ObjectiveList","objectives","map","key","href","onClick","removeObjective","bind","listObjectives","MonthSelector","prevMonth","month","year","nextMonth","ObjectiveAdd","nameRef","createRef","createObjective","preventDefault","objective","current","value","addObjective","currentTarget","reset","onSubmit","ref","required","size","placeholder","config","test","window","location","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseApp","firebase","initializeApp","Rebase","createClass","database","Logout","logout","auth","signOut","then","history","push","catch","err","console","log","isLoggedIn","currentUser","parseDate","monthAsString","dateAsInt","Date","parse","getCurrentYear","getFullYear","getMonth","date","Footer","logoutStr","Login","email","password","loginFailed","setState","errorMessage","login","signInWithEmailAndPassword","toLowerCase","error","errorCode","code","message","hasErrorMessage","state","role","App","defaultMonth","monthFromParams","params","yearFromParams","syncFirebaseDatabase","unsyncFirebaseDatabase","dbRef","syncState","context","undefined","removeBinding","objectivesList","list","Array","isArray","obj","Object","assign","splice","updateMonth","newMonth","setMonth","objectiveIndex","match","nextProps","String","NotFound","Router","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5330fba4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Objective extends React.Component {\n  static propTypes = {\n    item: PropTypes.object.isRequired,\n    toggleObjectiveCheck: PropTypes.func.isRequired\n  };\n\n  toggleObjectiveCheck = event => {\n    this.props.toggleObjectiveCheck(this.props.index);\n  };\n\n  render() {\n    return (\n      <span className=\"objective\">\n        <input\n          type=\"checkbox\"\n          checked={this.props.item.checked === true}\n          onChange={this.toggleObjectiveCheck}\n          index={this.props.index}\n        />\n        <span\n          className={this.props.item.checked ? 'name done text-muted' : 'name'}\n        >\n          {this.props.item.name}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default Objective;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Objective from './Objective';\n\nclass ObjectiveList extends React.Component {\n  static propTypes = {\n    objectives: PropTypes.array.isRequired,\n    toggleObjectiveCheck: PropTypes.func.isRequired,\n    removeObjective: PropTypes.func.isRequired\n  };\n\n  listObjectives() {\n    return this.props.objectives.map((item, index) => (\n      <li className=\"list-group-item\" key={index}>\n        <Objective\n          item={item}\n          index={index}\n          toggleObjectiveCheck={this.props.toggleObjectiveCheck}\n        />\n        <a\n          href=\"#delete\"\n          onClick={this.props.removeObjective.bind(this, index)}\n        >\n          <i className=\"fas fa-trash-alt\" />\n        </a>\n      </li>\n    ));\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"row objectiveList\">\n          <div className=\"col \">\n            <h3 className=\"card-title\">\n              <i className=\"fas fa-star\" />Objectives\n            </h3>\n            <ul className=\"list-group user-generated-content\">\n              {this.listObjectives()}\n            </ul>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default ObjectiveList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MonthSelector extends React.Component {\n  static propTypes = {\n    month: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    prevMonth: PropTypes.func.isRequired,\n    nextMonth: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <header>\n          <a\n            href=\"#previous\"\n            className=\"monthArrow\"\n            onClick={this.props.prevMonth}\n          >\n            &lt;&lt;\n          </a>\n          <h1 className=\"monthSelector\">\n            <span className=\"month\">\n              {`${this.props.month} ${this.props.year}`}\n            </span>\n          </h1>\n          <a href=\"#next\" className=\"monthArrow\" onClick={this.props.nextMonth}>\n            &gt;&gt;\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default MonthSelector;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ObjectiveAdd extends React.Component {\n  nameRef = React.createRef();\n\n  static propTypes = {\n    addObjective: PropTypes.func.isRequired,\n  };\n\n  createObjective = (event) => {\n    event.preventDefault();\n    const objective = {\n      name: this.nameRef.current.value,\n      checked: false,\n    };\n    this.props.addObjective(objective);\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <form\n            className=\"objective-new form-inline\"\n            onSubmit={this.createObjective}\n          >\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control user-generated-content\"\n                ref={this.nameRef}\n                required\n                size=\"40\"\n                placeholder=\"my new objective...\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary \" type=\"submit\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ObjectiveAdd;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nlet prodConfig = {\n  apiKey: \"AIzaSyDPwuBzfWxIxpi9TQn9ZnxzBtYy0YIYbUE\",\n  authDomain: \"monthly-objectives.firebaseapp.com\",\n  databaseURL: \"https://monthly-objectives.firebaseio.com\",\n  projectId: \"monthly-objectives\",\n  storageBucket: \"monthly-objectives.appspot.com\",\n  messagingSenderId: \"795804563760\",\n};\n\nlet devConfig = {\n  apiKey: \"AIzaSyA5TfI07yh31aNpKoX9BdZ2k4UUz7NQMTo\",\n  authDomain: \"monthly-objectives-dev.firebaseapp.com\",\n  databaseURL: \"https://monthly-objectives-dev.firebaseio.com\",\n  projectId: \"monthly-objectives-dev\",\n  storageBucket: \"monthly-objectives-dev.appspot.com\",\n  messagingSenderId: \"149177821597\",\n};\n\nlet config = /herokuapp/.test(window.location.href) ? prodConfig : devConfig;\n\nexport const firebaseApp = firebase.initializeApp(config);\n\nexport default Rebase.createClass(firebaseApp.database());\n","import React from 'react';\nimport { firebaseApp } from '../base';\n\nclass Logout extends React.Component {\n  logout = event => {\n    event.preventDefault();\n    firebaseApp\n      .auth()\n      .signOut()\n      .then(() => {\n        this.props.history.push('/');\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <a href=\"/logout\" onClick={this.logout}>\n        Log out\n      </a>\n    );\n  }\n}\nexport default Logout;\n","import { firebaseApp } from './base';\n\nconst isLoggedIn = () => firebaseApp.auth().currentUser !== null;\nexport { isLoggedIn };\n\nexport function parseDate(monthAsString, year) {\n  let dateAsInt = Date.parse(`${monthAsString} ${year}`);\n  return new Date(dateAsInt);\n}\n\nexport function getCurrentMonth() {\n  return getMonth(new Date());\n}\nexport function getCurrentYear() {\n  return new Date().getFullYear();\n}\n\nexport function getMonth(date) {\n  let month = '';\n\n  switch (date.getMonth()) {\n    case 0:\n      month = 'January';\n      break;\n    case 1:\n      month = 'February';\n      break;\n    case 2:\n      month = 'March';\n      break;\n    case 3:\n      month = 'April';\n      break;\n    case 4:\n      month = 'May';\n      break;\n    case 5:\n      month = 'June';\n      break;\n    case 6:\n      month = 'July';\n      break;\n    case 7:\n      month = 'August';\n      break;\n    case 8:\n      month = 'September';\n      break;\n    case 9:\n      month = 'October';\n      break;\n    case 10:\n      month = 'November';\n      break;\n    case 11:\n      month = 'December';\n      break;\n    default:\n      month = 'January';\n  }\n  return month;\n}\n","import React, { Fragment } from 'react';\nimport Logout from './Logout';\nimport { isLoggedIn } from '../helpers';\n\nclass Footer extends React.Component {\n  logoutStr = () => {\n    if (!isLoggedIn()) {\n      return '';\n    } else {\n      return (\n        <Fragment>\n          <Logout history={this.props.history} />\n          <span className=\"separator text-muted\">|</span>\n        </Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <br />\n        <br />\n        <hr />\n        <div className=\"row footer mx-auto\">\n          {this.logoutStr()}\n          <span className=\"text-muted\">&copy; Praline 2018</span>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { firebaseApp } from \"../base\";\nimport { getMonth } from \"../helpers\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorMessage: \"\" };\n  }\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n  };\n\n  email = React.createRef();\n  password = React.createRef();\n\n  loginFailed = () => {\n    this.setState({ errorMessage: \"Error while loggin in.\" });\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    firebaseApp\n      .auth()\n      .signInWithEmailAndPassword(\n        this.email.current.value,\n        this.password.current.value\n      )\n      .then(() => {\n        console.log(\"Login successful !\");\n        let date = new Date();\n        this.props.history.push(\n          `/${date.getFullYear()}/${getMonth(date).toLowerCase()}`\n        );\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n        this.loginFailed();\n      });\n  };\n\n  hasErrorMessage = () => this.state.errorMessage !== \"\";\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2 className=\"section-title\">Log In</h2>\n          </div>\n        </div>\n        <div className={\"row \" + (this.hasErrorMessage() ? \"\" : \"d-none\")}>\n          <div className=\"col\">\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <i className=\"fas fa-exclamation-circle\" />\n              {this.state.errorMessage}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <form onSubmit={this.login}>\n              <div className=\"form-group\">\n                <label>Email:</label>\n                <input\n                  className=\"form-control login-field user-generated-content\"\n                  type=\"email\"\n                  ref={this.email}\n                  name=\"email\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Password:</label>\n                <input\n                  className=\"form-control login-field user-generated-content\"\n                  type=\"password\"\n                  ref={this.password}\n                  name=\"password\"\n                />\n              </div>\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Log in\n              </button>\n            </form>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Fragment } from 'react';\nimport ObjectiveList from './ObjectiveList';\nimport MonthSelector from './MonthSelector';\nimport ObjectiveAdd from './ObjectiveAdd';\nimport Footer from './Footer';\nimport Login from './Login';\nimport firebase from '../base';\nimport {\n  getMonth,\n  parseDate,\n  getCurrentMonth,\n  getCurrentYear,\n  isLoggedIn\n} from '../helpers';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const { params } = this.props.match;\n    this.state.year = this.yearFromParams(params);\n    this.state.monthAsString = this.monthFromParams(params);\n  }\n\n  defaultMonth = () => getCurrentMonth().toLowerCase();\n\n  state = {\n    year: getCurrentYear(),\n    monthAsString: this.defaultMonth(),\n    objectives: []\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.syncFirebaseDatabase(params);\n  }\n\n  componentWillUnmount() {\n    this.unsyncFirebaseDatabase();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { params } = nextProps.match;\n    this.syncFirebaseDatabase(params);\n  }\n\n  monthFromParams = params => params.month || this.defaultMonth();\n  yearFromParams = params => params.year || getCurrentYear();\n\n  syncFirebaseDatabase = params => {\n    this.unsyncFirebaseDatabase();\n    this.dbRef = firebase.syncState(\n      `${this.yearFromParams(params)}/${this.monthFromParams(params)}`,\n      {\n        context: this,\n        state: 'objectives'\n      }\n    );\n  };\n\n  unsyncFirebaseDatabase = () => {\n    if (this.dbRef !== undefined) firebase.removeBinding(this.dbRef);\n  };\n\n  objectivesList = () => {\n    let list = this.state.objectives;\n    // firebase will return an empty object when no data is found\n    if (!Array.isArray(list)) {\n      list = [];\n    }\n    return list;\n  };\n\n  addObjective = obj => {\n    let objectives = Object.assign([], this.state.objectives);\n    objectives.push(obj);\n    this.setState({ objectives });\n  };\n\n  removeObjective = (index, event) => {\n    let objectives = Object.assign([], this.state.objectives);\n    objectives.splice(index, 1);\n    this.setState({ objectives });\n  };\n\n  updateMonth = date => {\n    let monthAsString = getMonth(date).toLowerCase();\n    let year = date.getFullYear();\n    this.setState({ monthAsString, year });\n    this.props.history.push(`/${date.getFullYear()}/${monthAsString}`);\n  };\n\n  prevMonth = event => {\n    event.preventDefault();\n    let date = parseDate(this.state.monthAsString, this.state.year);\n    let newMonth = date.getMonth() - 1;\n    date.setMonth(newMonth);\n    this.updateMonth(date);\n  };\n\n  nextMonth = event => {\n    event.preventDefault();\n    let date = parseDate(this.state.monthAsString, this.state.year);\n    let newMonth = date.getMonth() + 1;\n    date.setMonth(newMonth);\n    this.updateMonth(date);\n  };\n\n  toggleObjectiveCheck = objectiveIndex => {\n    let objectives = Object.assign([], this.state.objectives);\n    objectives[objectiveIndex].checked = !objectives[objectiveIndex].checked;\n    this.setState({ objectives });\n  };\n\n  render() {\n    if (!isLoggedIn()) {\n      return (\n        <Fragment>\n          <Login history={this.props.history} />\n          <Footer />\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <MonthSelector\n          month={this.state.monthAsString}\n          year={String(this.state.year)}\n          prevMonth={this.prevMonth}\n          nextMonth={this.nextMonth}\n        />\n        <ObjectiveList\n          objectives={this.objectivesList()}\n          toggleObjectiveCheck={this.toggleObjectiveCheck}\n          removeObjective={this.removeObjective}\n        />\n        <ObjectiveAdd addObjective={this.addObjective} />\n\n        <Footer history={this.props.history} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => <div>Not Found !</div>;\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/:year/:month\" component={App} />\n        <Route exact component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./css/style.css\";\nimport Router from \"./components/Router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"main\")\n);\n"],"sourceRoot":""}